Monday - absent
Tuesday - absent
Wednesday - off
Thursday - I typed up the workflow for the automation and also experimented with some Selenium code I have written to browse other websites. I successfully passed my credentials to the Goodreads website to login and visit the Giveaways page.

Friday - I researched Selenium and how to make a valid request to a website that blocks web scraping. https://selenium-python.readthedocs.io/ https://stackoverflow.com/questions/76611310/how-to-mimic-like-a-human-while-using-selenium-webdriver

Week of 4/15:

Monday - Code - experimented with more ways to get different types of elements in Selenium. 
Tuesday - Code
Wednesday - Today I looked into the object oriented part of web elements in Selenium and XPATHs. I'm trying to get each "article" for giveaways as an object and then the individual pieces of data for each rather than visiting each separate link and then getting the data.
https://www.w3schools.com/xml/xpath_intro.asp
https://www.browserstack.com/guide/xpath-in-selenium

Thursday - Today I continued looking into XPATH. From the code for tdoay you can see that I found a long way to get my specific data of interest using XPATH. I can now write some decent, but probably slow logic to go through the list of giveaways.
Friday - absent (prom)

Week of 4/22:
Monday - absent
Tuesday - Code + Today I dealt with more XPATHs, compiling authors and book descriptions in addition to titles. In experimenting with this, I also was able to make my XPATHs much more concise and it's now not as time-consuming to write them out as I previously thought because all class names are not required. Tomorrow I will iterate through the lists to create a simple command line interface and click the enter giveaway button.
Wednesday - Code + Today I worked more on the giveaway entering logic and was successfully able to get the webdriver to enter a giveaway!
Thursday - absent
Friday - Code - Today I successfully finished the initial command line interface (for loop) that goes through giveaways and asks the user if they want to enter each one. I debugged stale elements as well by using map() to get the text rather than the web element. 

Week of 4/29:
Monday - absent
Tuesday - absent
Wednesday - Today, I didn't do a lot of coding but I researched machine learning models for the decision-making part of the project. On huggingface, I found some binary text-classification models such as this one: https://huggingface.co/autoevaluate/binary-classification. Additionally, I did some research on transformers vs. other types of models (such as traditional neural networks) to see what would best work for my data. I think it would be easiest fine-tune a transformer model rather than vectorizing my inputs which come in multiple forms, like description, category, author.
https://blogs.nvidia.com/blog/what-is-a-transformer-model/ 
Thursday - Code - today I took a break from the machine learning stuff and attempted to write a while loop to click the button to get more giveaways on the page as long as they were still newly posted on today's date. Unfortunately I tried and failed at fetching the date element. 
Friday - Code - today I searched the Goodreads HTML for the element for pagination, getting the next 100 giveaways or so. I need to click this element through my code to fetch more giveaways.